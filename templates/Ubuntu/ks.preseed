{% set tpl_gpt = true if hostvars[item].host_presets.disks.gpt is defined and hostvars[item].host_presets.disks.gpt else false %}
{% set tpl_raid = hostvars[item].host_presets.disks.raid %}
{% set disks=[] %}
{% for raid in tpl_raid %}
{% for part in raid.devices %}
{% set dev = part|regex_replace('\d+$','') %}
{% if dev not in disks %}
{% if disks.append(dev) %}{% endif %}
{% endif %}
{% endfor %}
{% endfor %}
# {{ ansible_managed }}

d-i partman-auto-lvm/guided_size string max

#== start of raid specific setup. See example.preseed for alternative content of this section
d-i partman-auto/disk string{% for disk in disks %} /dev/{{ disk }}{% endfor %}{{ '' }}
d-i partman-auto/method string raid
d-i partman-auto-lvm/new_vg_name string vg_big

{% if tpl_gpt %}
d-i partman-basicfilesystems/choose_label string gpt
d-i partman-basicfilesystems/default_label string gpt
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt
d-i partman/choose_label string gpt
d-i partman/default_label string gpt

{% endif %}
# https://wikitech.wikimedia.org/wiki/PartMan
# {minumum size of partition in mb} {priority} {maximum size of partition in mb} {fs}
#
d-i partman-auto/expert_recipe string \
      raid-lvm ::                     \
{% if tpl_gpt %}
        1 1 1 free            \
          $gptonly{ }         \
          $primary{ }         \
          $bios_boot{ }       \
          method{ biosgrub }  \
              .               \
{% endif %}
        512 10 512 raid \
          {% if tpl_gpt %}$gptonly{ } {% endif %}$primary{ } $lvmignore{ } $bootable{ } \
          method{ raid } \
        . \
        1728 20 -1 raid \
          {% if tpl_gpt %}$gptonly{ } {% endif %}$primary{ } $lvmignore{ } \
          method{ raid } \
        . \
        1024 10000 {{ 1024*1024 }} ext4 \
          $defaultignore $lvmok{ } lv_name{ root } \
          method{ format } format{ } \
          use_filesystem{ } filesystem{ ext4 } \
          mountpoint{ / } \
        . \
        64 10 64 ext4 \
          $defaultignore $lvmok{ } lv_name{ deleteme } \
          method{ lvm } \
        .
# <raidtype> <devcount> <sparecount> <fstype> <mountpoint>
d-i partman-auto-raid/recipe string \
{% for raid in tpl_raid %}
    {{ raid.type }} {{ raid.devices|length }} {{ raid.spares }} {{ raid.fs }} {{ raid.mount }} {{ ' ' }}
{%- for dev in raid.devices %}/dev/{{ dev }}
{%- if loop.index < raid.devices|length %}#{% endif %}
{% endfor %} .
{%- if loop.index < tpl_raid|length %} \{% endif %}

{% endfor %}
#=== end of raid specific setup


# the 'deleteme' LV soaks up the leftover space in the VG
# d-i preseed/late_command string in-target lvremove -f vg_big/deleteme
# this step hangs. So delete lv in post script

d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true #NOTE: This was missing in the example preseed
d-i partman-auto/purge_lvm_from_device boolean true
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-lvm/confirm boolean true
d-i partman-md/confirm boolean true
d-i partman-md/confirm_nooverwrite boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

d-i partman/mount_style select label

d-i mdadm/boot_degraded boolean true

# Hostname:
netcfg	netcfg/get_hostname	string	{{ hostvars[item].host_presets.hostname }}
# Domain name:
{% if hostvars[item].host_presets.domain is defined %}
netcfg	netcfg/get_domain	string	{{ hostvars[item].host_presets.domain }}
{% endif %}

# User setup
# d-i passwd/user-fullname string Ubuntu User
# d-i passwd/username string user
# d-i passwd/user-password-crypted password {{ hostvars[item].host_presets.initial_settings.password }}
d-i user-setup/allow-password-weak boolean true
